
Number of nodes in Substrate Network = 11
Number of edges in Substrate Network = 20
Substrate nodes min cpu power = 100
Substrate nodes max cpu power = 250
Substrate edge min link capacity = 100
Substrate edge max link capacity = 250

Number of nodes in substrate graph = 11
Substrate graph = {('5', '3'), ('0', '4'), ('8', '5'), ('8', '0'), ('2', '0'), ('5', '1'), ('0', '8'), ('3', '7'), ('4', '0'), ('10', '5'), ('7', '3'), ('3', '5'), ('6', '3'), ('0', '2'), ('4', '9'), ('9', '4'), ('5', '10'), ('5', '8'), ('1', '5'), ('3', '6')}

REQUEST- 1
Number of virtual nodes =  7
Number of edges in VN =  16
Virtual Network Request=  {('3', '4'), ('6', '2'), ('3', '2'), ('4', '1'), ('5', '2'), ('6', '1'), ('2', '1'), ('0', '1'), ('1', '4'), ('1', '6'), ('4', '3'), ('1', '0'), ('2', '6'), ('2', '3'), ('2', '5'), ('1', '2')}


Candidate set-1, Generated candidates: 
0:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
1:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
3:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
4:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
5:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
6:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Candidate set-2, Validated candidates: {0: [0], 1: [1], 2: [2], 3: [3, 10], 4: [4, 9], 5: [5, 8], 6: [6, 7]}

Candidate set-3, uniquified candidates:  {2: [2], 1: [1], 0: [0], 3: [3, 10], 4: [4, 9], 5: [5, 8], 6: [6, 7]}
Path decomposition = [['1', '4', '3', '2', '6'], ['0'], ['5']]
Mapping= {6: 6, 2: 2, 3: 3, 4: 4, 1: 1, 0: 0, 5: 8}

REQUEST- 2
Number of virtual nodes =  4
Number of edges in VN =  6
Virtual Network Request=  {('3', '0'), ('0', '3'), ('3', '2'), ('2', '3'), ('3', '1'), ('1', '3')}


Candidate set-1, Generated candidates: 
0:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
1:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
3:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Candidate set-2, Validated candidates: {0: [0, 7, 8], 1: [1, 6, 9], 2: [2, 5, 10], 3: [3, 4]}

Candidate set-3, uniquified candidates:  {3: [3, 4], 2: [2, 5, 10], 1: [1, 6, 9], 0: [0, 7, 8]}
Path decomposition = [['1', '3', '0'], ['2']]
Mapping= {0: 8, 3: 3, 1: 9, 2: 5}

REQUEST- 3
Number of virtual nodes =  8
Number of edges in VN =  28
Virtual Network Request=  {('5', '3'), ('5', '7'), ('7', '6'), ('4', '3'), ('2', '5'), ('5', '2'), ('1', '6'), ('4', '2'), ('3', '1'), ('0', '3'), ('3', '0'), ('3', '5'), ('3', '2'), ('0', '1'), ('7', '1'), ('2', '4'), ('6', '3'), ('7', '5'), ('1', '7'), ('6', '7'), ('1', '3'), ('5', '6'), ('6', '1'), ('1', '0'), ('6', '5'), ('2', '3'), ('3', '4'), ('3', '6')}


Candidate set-1, Generated candidates: 
0:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
1:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
3:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
4:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
5:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
6:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
7:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Candidate set-2, Validated candidates: {0: [0], 1: [1], 2: [2], 3: [3], 4: [4], 5: [5, 10], 6: [6, 9], 7: [7, 8]}

Candidate set-3, uniquified candidates:  {4: [4], 3: [3], 2: [2], 1: [1], 0: [0], 5: [5, 10], 6: [6, 9], 7: [7, 8]}
Path decomposition = [['3', '1', '6', '7', '5', '2', '4'], ['0']]
Mapping= {4: 4, 2: 2, 5: 5, 7: 7, 6: 6, 1: 1, 3: 3, 0: 0}

REQUEST- 4
Number of virtual nodes =  5
Number of edges in VN =  8
Virtual Network Request=  {('3', '0'), ('3', '2'), ('4', '0'), ('0', '4'), ('0', '1'), ('1', '0'), ('2', '3'), ('0', '3')}


Candidate set-1, Generated candidates: 
0:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
1:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
3:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
4:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Candidate set-2, Validated candidates: {0: [0, 9, 10], 1: [1, 8], 2: [2, 7], 3: [3, 6], 4: [4, 5]}

Candidate set-3, uniquified candidates:  {1: [1, 8], 2: [2, 7], 3: [3, 6], 4: [4, 5], 0: [0, 9, 10]}
Path decomposition = [['0', '4'], ['2', '3'], ['1']]
Mapping= {4: 4, 0: 9, 3: 6, 2: 2, 1: 8}

REQUEST- 5
Number of virtual nodes =  6
Number of edges in VN =  12
Virtual Network Request=  {('3', '4'), ('4', '1'), ('5', '2'), ('2', '1'), ('1', '4'), ('4', '3'), ('1', '5'), ('2', '0'), ('2', '5'), ('0', '2'), ('1', '2'), ('5', '1')}


Candidate set-1, Generated candidates: 
0:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
1:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
3:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
4:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
5:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Candidate set-2, Validated candidates: {0: [0], 1: [1, 10], 2: [2, 9], 3: [3, 8], 4: [4, 7], 5: [5, 6]}

Candidate set-3, uniquified candidates:  {0: [0], 1: [1, 10], 2: [2, 9], 3: [3, 8], 4: [4, 7], 5: [5, 6]}
Path decomposition = [['5', '2', '1', '4', '3'], ['0']]
Mapping= {3: 8, 4: 4, 1: 1, 2: 2, 5: 5, 0: 0}

VNE time = 0.785 seconds